import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.21"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.8.21'
    id 'maven-publish'
}

allprojects {
    group 'com.github.only52607.lua-mirai'
    version '2.8.0'
    tasks.withType(KotlinCompile).configureEach {
        kotlinOptions.freeCompilerArgs = ['-Xjvm-default=enable', '-Xopt-in=kotlin.RequiresOptIn', '-Xcontext-receivers']
        kotlinOptions.jvmTarget = "1.8"
    }
    repositories {
        mavenLocal()
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.jetbrains.kotlin.jvm'

    dependencies {
        api(platform("net.mamoe:mirai-bom:2.14.0"))
        implementation fileTree(dir: 'libs', include: ['*.jar'])
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation "net.mamoe:mirai-core-api"
        runtimeOnly "net.mamoe:mirai-core"
        testImplementation group: 'junit', name: 'junit', version: '4.12'
    }

    tasks.register("sourcesJar", Jar) {
        from sourceSets.main.allJava
        archiveClassifier.set('sources')
    }

    tasks.register("javadocJar", Jar) {
        from javadoc
        archiveClassifier.set('javadoc')
    }
}

publishing {
    publications {

    }
}